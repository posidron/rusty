// Email Regex Testing

print "--- Email Regex Test ---";

// Try a very basic pattern first
var basic_pattern = ".+@.+";
print "\nTesting basic pattern: " + basic_pattern;
var basic_regex = regex_new(basic_pattern);

print "Testing 'user@example.com': " + as_string(regex_test(basic_regex, "user@example.com"));
print "Testing 'invalid': " + as_string(regex_test(basic_regex, "invalid"));

// Try with explicit dot character instead of using backslash-dot
var with_dot_pattern = ".+@.+[.].*";
print "\nTesting pattern with explicit dot: " + with_dot_pattern;
var with_dot_regex = regex_new(with_dot_pattern);

print "Testing 'user@example.com': " + as_string(regex_test(with_dot_regex, "user@example.com"));
print "Testing 'user@domain': " + as_string(regex_test(with_dot_regex, "user@domain"));

// Try the dot with character class
var char_class_pattern = "[a-zA-Z0-9]+@[a-zA-Z0-9]+[.][a-zA-Z0-9]+";
print "\nTesting pattern with character classes: " + char_class_pattern;
var char_class_regex = regex_new(char_class_pattern);

print "Testing 'user@example.com': " + as_string(regex_test(char_class_regex, "user@example.com"));
print "Testing 'user@domain': " + as_string(regex_test(char_class_regex, "user@domain"));
print "Testing 'user.name@example.co.uk': " + as_string(regex_test(char_class_regex, "user.name@example.co.uk"));

// Try using a character class for the domain part
var domain_pattern = "[^@]+@[^@.]+[.][^@.]+";
print "\nTesting domain pattern: " + domain_pattern;
var domain_regex = regex_new(domain_pattern);

print "Testing 'user@example.com': " + as_string(regex_test(domain_regex, "user@example.com"));
print "Testing 'user.name@example.co.uk': " + as_string(regex_test(domain_regex, "user.name@example.co.uk"));
print "Testing 'user@domain': " + as_string(regex_test(domain_regex, "user@domain"));
print "Testing 'user@': " + as_string(regex_test(domain_regex, "user@"));
print "Testing '@domain.com': " + as_string(regex_test(domain_regex, "@domain.com"));

print "\nTest completed.";

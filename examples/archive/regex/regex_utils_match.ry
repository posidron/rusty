// Simple match function test

// Cache for regex patterns
var __regex_cache = array();

// Get a regex from cache or create a new one
fun regex(pattern) {
    var i = 0;
    while (i < length(__regex_cache)) {
        var entry = get(__regex_cache, i);
        if (get(entry, 0) == pattern) {
            return get(entry, 1);
        }
        i = i + 1;
    }

    // Not found in cache, create new regex
    var new_regex = regex_new(pattern);

    // Add to cache
    var cache_entry = array();
    cache_entry = push(cache_entry, pattern);
    cache_entry = push(cache_entry, new_regex);
    __regex_cache = push(__regex_cache, cache_entry);

    return new_regex;
}

// Test if a string matches a pattern
fun match(pattern, text) {
    var r = regex(pattern);
    return regex_test(r, text);
}

// Demo
print "--- Match Function Demo ---";

print "Does '123' match [0-9]+? " + as_string(match("[0-9]+", "123"));
print "Does 'abc' match [0-9]+? " + as_string(match("[0-9]+", "abc"));

var email = "user@example.com";
print "Is '" + email + "' a valid email? " + as_string(match("[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+[.][a-zA-Z]{2,}", email));

print "Demo completed.";

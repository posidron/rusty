// JSON Final Demo

print "--- JSON Final Demo ---";

// PART 1: CREATING AND MANIPULATING JSON OBJECTS

// Create an empty object (represented as an array in Rusty)
var person = array();

// Add properties as key-value pairs
person = push(person, array("name", "John"));
person = push(person, array("age", 30));
person = push(person, array("active", true));

print "Person object:";
print person;

// Helper function to access object properties
fun get_prop(obj, key_name) {
    var i = 0;
    while (i < length(obj)) {
        var pair = get(obj, i);
        var current_key = get(pair, 0);
        if (current_key == key_name) {
            return get(pair, 1);
        }
        i = i + 1;
    }
    return nil;
}

// Access properties
print "\nAccessing properties:";
var name = get_prop(person, "name");
var age = get_prop(person, "age");
var active = get_prop(person, "active");

print "Name: " + name;
print "Age: " + as_string(age);
print "Active: " + as_string(active);

// PART 2: NESTED OBJECTS

// Create an address object
var address = array();
address = push(address, array("street", "123 Main St"));
address = push(address, array("city", "Boston"));
address = push(address, array("state", "MA"));

// Add address to person
person = push(person, array("address", address));

print "\nPerson with address:";
print person;

// Access nested objects
print "\nAccessing nested objects:";
var person_address = get_prop(person, "address");
var city = get_prop(person_address, "city");
print "City: " + city;

// PART 3: SERIALIZATION

// Convert to JSON string
print "\nSerializing to JSON:";
var json = json_stringify(person);
print json;

// PART 4: ARRAYS IN OBJECTS

// Add an array of hobbies
var hobbies = array();
hobbies = push(hobbies, "reading");
hobbies = push(hobbies, "coding");
hobbies = push(hobbies, "hiking");

person = push(person, array("hobbies", hobbies));

print "\nPerson with hobbies:";
print person;

// Convert to JSON again
print "\nUpdated JSON:";
print json_stringify(person);

print "\nDemo completed.";
